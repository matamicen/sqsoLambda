CREATE DEFINER=`sqso`@`%` PROCEDURE `qraqsofeedget2`(IN QRA varchar(45))
BEGIN
/**/
DROP TEMPORARY TABLE IF EXISTS t_qsos;
/*   #Get all the post where the current user is owner. */
CREATE TEMPORARY TABLE t_qsos (
  select
    *
  from
    (
      SELECT
        qsos.*
      from
        qsos
        INNER JOIN qsos_qras ON qsos_qras.idqso = qsos.idqsos
        inner join qras on qras.idqras = qsos_qras.idqra
      WHERE
        qsos.datetime <= NOW()
        and qras.qra = QRA
        and deleted = 0
      order by
        datetime desc
      LIMIT
        50
    ) as t_qsos
);
DROP TEMPORARY TABLE IF EXISTS t_qsos1;
DROP TEMPORARY TABLE IF EXISTS t_qsos2;
CREATE TEMPORARY TABLE t_qsos1 (
  select
    *
  from
    t_qsos
);
CREATE TEMPORARY TABLE t_qsos2 (
  select
    *
  from
    t_qsos
);
/*#Get QSO Data and QRA Owner Detail**/
SELECT
  t_qsos1.*,
  qras.idqras,
  qras.qra,
  qras.profilepic,
  qras.avatarpic
FROM
  qras
  INNER JOIN qsos_qras ON qsos_qras.idqra = qras.idqras
  INNER JOIN t_qsos1 AS t_qsos1 ON t_qsos1.idqsos = qsos_qras.idqso
WHERE
  isOwner = 1
ORDER BY
  idqso DESC;
  /*#QRAS*/
  (
    SELECT
      *
    FROM
      (
        (
          SELECT
            idqso,
            qras.idqras,
            qras.qra,
            qras.profilepic,
            qras.avatarpic
          FROM
            qras
            INNER JOIN qsos_qras ON qsos_qras.idqra = qras.idqras
            INNER JOIN t_qsos1 AS t_qsos1 ON t_qsos1.idqsos = qsos_qras.idqso
          WHERE
            isOwner = 0
            AND qras.disabled = 0
        )
        UNION
          (
            SELECT
              idqso,
              qras.idqras,
              qras.qra,
              qras.profilepic,
              qras.avatarpic
            FROM
              qras
              INNER JOIN qsos_qras ON qsos_qras.idqra = qras.idqras
              INNER JOIN t_qsos2 AS t_qsos2 ON t_qsos2.idqso_shared = qsos_qras.idqso
            WHERE
              isOwner = 0
              AND qras.disabled = 0
          )
      ) AS i
    
  );
  /*#Comments*/
SELECT
  *
FROM
  (
    (
      SELECT
        qsos_comments.*,
        qras.idqras,
        qras.qra,
        qras.profilepic,
        qras.avatarpic
      FROM
        qsos_comments
        INNER JOIN t_qsos1 AS t_qsos1 ON t_qsos1.idqsos = qsos_comments.idqso
        INNER JOIN qras ON qsos_comments.idqra = qras.idqras
      WHERE
        qsos_comments.deleted = 0
        AND qras.disabled = 0
    )
    UNION
      (
        SELECT
          qsos_comments.*,
          qras.idqras,
          qras.qra,
          qras.profilepic,
          qras.avatarpic
        FROM
          qsos_comments
          INNER JOIN t_qsos2 AS t_qsos2 ON t_qsos2.idqso_shared = qsos_comments.idqso
          INNER JOIN qras ON qsos_comments.idqra = qras.idqras
        WHERE
          qsos_comments.deleted = 0
          AND qras.disabled = 0
      )
  ) AS i
ORDER BY
  idqso DESC,
  idqsos_comments ASC;
  /*#Likes*/
SELECT
  *
FROM
  (
    (
      SELECT
        qsos_likes.*
      FROM
        qsos_likes
        INNER JOIN t_qsos1 AS t_qsos1 ON t_qsos1.idqsos = qsos_likes.idqso
    )
    UNION
      (
        SELECT
          qsos_likes.*
        FROM
          qsos_likes
          INNER JOIN t_qsos2 AS t_qsos2 ON t_qsos2.idqso_shared = qsos_likes.idqso
      )
  ) AS i
ORDER BY
  idqso;
  /*#Media*/
SELECT
  *
FROM
  (
    (
      SELECT
        qsos_media.*
      FROM
        qsos_media
        INNER JOIN t_qsos1 AS t_qsos1 ON t_qsos1.idqsos = qsos_media.idqso
      WHERE
        qsos_media.deleted = 0
    )
    UNION
      (
        SELECT
          qsos_media.*
        FROM
          qsos_media
          INNER JOIN t_qsos2 AS t_qsos2 ON t_qsos2.idqso_shared = qsos_media.idqso
        WHERE
          qsos_media.deleted = 0
      )
  ) AS i
ORDER BY
  idqso;
  /*#QSO Original with QRA Owner Data*/
SELECT
  qsos.*,
  qras.idqras,
  qras.qra,
  qras.profilepic,
  qras.avatarpic
FROM
  qras
  INNER JOIN qsos_qras ON qsos_qras.idqra = qras.idqras
  INNER JOIN t_qsos2 AS t_qsos2 ON t_qsos2.idqso_SHARED = qsos_qras.idqso
  INNER JOIN qsos ON qsos.idqsos = t_qsos2.idqso_shared
WHERE
  isOwner = 1
  AND qras.disabled = 0
ORDER BY
  idqsos;
  /*#Links*/
SELECT
  *
FROM
  (
    (
      SELECT
        qsos_links.*
      FROM
        qsos_links
        INNER JOIN t_qsos1 AS t_qsos1 ON t_qsos1.idqsos = qsos_links.idqso
    )
    UNION
      (
        SELECT
          qsos_links.*
        FROM
          qsos_links
          INNER JOIN t_qsos2 AS t_qsos2 ON t_qsos2.idqso_shared = qsos_links.idqso
      )
  ) AS i
ORDER BY
  idqso;
END